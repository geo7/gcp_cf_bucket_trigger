branches:
  - name: main
    type: release
  - name: dev
    type: pre-release
    prerelease: true

plugins:
  # https://github.com/semantic-release/commit-analyzer
  # default commit conventions that are used:
  # https://github.com/angular/angular/blob/main/CONTRIBUTING.md#-commit-message-format
  # Default commit types:
  # https://github.com/angular/angular/blob/main/CONTRIBUTING.md#type
  # These have the following default behaviour:
  # build: n/a
  # ci: n/a
  # docs: n/a
  # feat: increase minor version
  # fix: increase patch version
  # perf: increase patch version
  # refactor: nothing
  # test: nothing
  - "@semantic-release/commit-analyzer"
  # Note the assets part from the README
  # https://github.com/jpoehnelt/semantic-release-replace-plugin/blob/main/README.md
  # Files that are to be changed need to be in the /git part as well.
  - - "semantic-release-replace-plugin"
    - replacements:
        - files:
            - "pyproject.toml"
          from: "^version = \".*\""
          to: "version = \"${nextRelease.version}\""
          results:
            - file: "pyproject.toml"
              hasChanged: true
              numMatches: 1
              numReplacements: 1
          countMatches: true
        - files:
              # I'm pretty sure using this sort of approach (like __version__
              # etc) is outdated at this point.
            - "simple_bucket_trigger/__init__.py"
          from: "^VERSION = \".*\""
          to: "VERSION = \"${nextRelease.version}\""
          results:
            - file: "simple_bucket_trigger/__init__.py"
              hasChanged: true
              numMatches: 1
              numReplacements: 1
          countMatches: true
  - - "@semantic-release/git"
    - assets:
        - "pyproject.toml"
        - "simple_bucket_trigger/__init__.py"
      message: "chore(release): ${nextRelease.version} \n\n${nextRelease.notes}"
